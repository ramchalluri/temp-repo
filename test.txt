const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');
const crypto = require('crypto');

const app = express();
const port = 3000;

// Middleware to parse JSON requests
app.use(bodyParser.json());

// Load RSA keys
const publicKey = fs.readFileSync('./public_key.pem', 'utf8');

// Encrypt function using RSA-OAEP-256
function encryptToken(token) {
    const encrypted = crypto.publicEncrypt(
        {
            key: publicKey,
            padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,
            oaepHash: 'sha256',
        },
        Buffer.from(token, 'utf8')
    );
    return encrypted.toString('base64'); // Return Base64-encoded encrypted token
}

// API endpoint to encrypt JWT
app.post('/encrypt-token', (req, res) => {
    const { token } = req.body;

    if (!token) {
        return res.status(400).json({ error: 'Token is required' });
    }

    try {
        const encryptedToken = encryptToken(token);
        res.status(200).json({ encryptedToken });
    } catch (error) {
        console.error('Encryption error:', error);
        res.status(500).json({ error: 'Failed to encrypt token' });
    }
});

// Start the server
app.listen(port, () => {
    console.log(`Server running on http://localhost:${port}`);
});
