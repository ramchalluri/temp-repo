const express = require('express');
const bodyParser = require('body-parser');
const crypto = require('crypto');

const app = express();
const port = 3000;

// Middleware to parse JSON requests
app.use(bodyParser.json());

// Encryption configuration
const algorithm = 'aes-256-cbc';
const key = crypto.randomBytes(32); // Replace this with your securely stored key
const iv = crypto.randomBytes(16); // Replace this with your securely stored IV

// Encrypt function
function encryptToken(token) {
    const cipher = crypto.createCipheriv(algorithm, key, iv);
    let encrypted = cipher.update(token, 'utf8', 'hex');
    encrypted += cipher.final('hex');
    return {
        encryptedToken: encrypted,
        iv: iv.toString('hex'), // Include the IV for decryption
    };
}

// API endpoint to encrypt JWT
app.post('/encrypt-token', (req, res) => {
    const { token } = req.body;

    if (!token) {
        return res.status(400).json({ error: 'Token is required' });
    }

    try {
        const result = encryptToken(token);
        res.status(200).json(result);
    } catch (error) {
        res.status(500).json({ error: 'Failed to encrypt token' });
    }
});

// Start the server
app.listen(port, () => {
    console.log(`Server running on http://localhost:${port}`);
});
